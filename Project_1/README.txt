I want to build static codes analyzers that find bugs or vulnerabilities for Android apps. This analyzer is relatively inexpensive to implement and very useful. For example, a static code analyzer helps security analysts to narrow down on threats or weaknesses detected in the early or final stages of development, before the beginning of the software testing phase. More specifically, static code analysts can be set up to automatically find the exact weakness of codes, such as Apps, classes, and methods. Therefore, analysts allow developers to spend less time to find and fix the errors. This directly saves companies’ assets and improves customer experience. To narrow down the scope of this project, I will focus on building a static code analyzer for Android applications. I break down my progress into 4 phases.


To start this project, I will follow an online tutorial to build a simple android app. I will code in Kotlin. My development environment is Android Studio. Since I do not have prior experience in building android apps, I want to get familiar with android app development first. I chose to follow a tutorial that builds a To-Do app. This app contains 3 functions, add, cross out, and delete ToDo. 
The phrase1, I will implement the detekt library on this simple Andriod App that contains no bugs. This is the control group that ensures everything works as expected. After reviewing a few existing tools, I decide to choose Detekt. This tool is free and can be used purely as a library. ere is the reference link for installing and using detekt, https://github.com/detekt/detekt. I will next use classifiers to measure the accuracy of detekt.
The phrase 2, I will extract feature vectors from Android apps with and without bugs and assign labels to them, then use those vectors to train classifiers that distinguish error from Android apps. I will evaluate the performance of all classifiers and compare them to Detekt, then I can pick the classifier with the highest accuracy. 
The phrase 3, to expand my data set, I will find source codes of other apps that are more complicated than the app that I built. Those data set will help me to further train my classifiers and hopefully improve their accuracy.
The phrase 4, I will create specific errors and train on them. By the end, the final product should automatically look for bugs and vulnerabilities in the codes. It should also allow users to select specific types of error that users want to find.